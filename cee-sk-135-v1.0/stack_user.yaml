heat_template_version: 2016-10-14
description: Create a project
parameters:
  public_net_id:
    type: string
    description: The ID for the floating ip
  project_name:
    type: string
    description: Name of the project for the flavors
  project_guid: 
    type: string
  api_user:
    type: string
    default: ""
    description: User for API calls (i.e. ipmi)
  api_pass:
    type: string
    default: ""
    description: Password for API user
  api_url:
    type: string
    default: ""
    description: OSP URL for API calls
 
resources:
  openstack_project_infra_key:
    type: OS::Nova::KeyPair
    properties:
      name:
        str_replace:
          template: $project$-infra_key
          params:
             $project$: { get_param: project_guid }
      save_private_key: true
  Network0_network:
    type: OS::Neutron::Net
    properties:
      name: "Network0"
      shared: false
      value_specs: {"mtu": 1500}
  Network1_network:
    type: OS::Neutron::Net
    properties:
      name: "Network1"
      shared: false
      value_specs: {"mtu": 1500}
  Network0_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: "sub-Network0"
      network_id: { get_resource: Network0_network }
      cidr: "10.0.0.0/16"
      gateway_ip: "10.0.0.254"
      enable_dhcp: "True"
      
      allocation_pools: [{"start": 10.0.0.3, "end": 10.0.255.254}]
      
      dns_nameservers:
      
        - 10.0.0.2
      
        - 8.8.8.8
  Network1_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: "sub-Network1"
      network_id: { get_resource: Network1_network }
      cidr: "172.25.250.0/24"
      gateway_ip: "172.25.250.254"
      enable_dhcp: "False"
      
      dns_nameservers:
      
        - 10.0.0.2
      
        - 8.8.8.8
  Router0_router:
    type: OS::Neutron::Router
    properties:
      name: "Router0"
      external_gateway_info: { "network": { get_param: public_net_id } }

  
  Router0_Network0_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: Network0_network }
      fixed_ips:
        - ip_address: "10.0.0.254"
  
  Router0_Network1_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: Network1_network }
      fixed_ips:
        - ip_address: "172.25.250.254"
  


  
  Router0_Network0_router_if:
    type: OS::Neutron::RouterInterface
    properties:
        router: { get_resource: Router0_router }
        port: { get_resource: Router0_Network0_port }
  
  Router0_Network1_router_if:
    type: OS::Neutron::RouterInterface
    properties:
        router: { get_resource: Router0_router }
        port: { get_resource: Router0_Network1_port }
  
  0director_services_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: 0director_services_sg
      rules:
      
      - {port_range_max: 22, port_range_min: 22, protocol: tcp, remote_ip_prefix: 0.0.0.0/0}
      
      - {port_range_max: 65535, port_range_min: 1, protocol: tcp, remote_ip_prefix: 10.0.0.0/255.255.0.0}
      
      - {port_range_max: 65535, port_range_min: 1, protocol: udp, remote_ip_prefix: 10.0.0.0/255.255.0.0}
      
      - {port_range_max: 65535, port_range_min: 1, protocol: tcp, remote_ip_prefix: 172.25.250.0/255.255.255.0}
      
      - {port_range_max: 65535, port_range_min: 1, protocol: udp, remote_ip_prefix: 172.25.250.0/255.255.255.0}
      
  ipmi-host-0_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: Network0_network }
      mac_address: "2c:c2:60:01:02:fd"
      
      port_security_enabled: false
      
      
      fixed_ips:
        - {subnet: {get_resource: Network0_subnet}, ip_address: "10.0.0.101"}
      
    
  ipmi-host-1_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: Network1_network }
      mac_address: "2c:c2:60:01:03:fd"
      
      port_security_enabled: false
      
      
      fixed_ips:
        - {subnet: {get_resource: Network1_subnet}, ip_address: "172.25.250.2"}
      
    
  compute0-0_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: Network1_network }
      mac_address: "2c:c2:60:75:3d:91"
      
      port_security_enabled: false
      
      
      fixed_ips:
        - {subnet: {get_resource: Network1_subnet}, ip_address: "172.25.250.13"}
      
    
  compute1-0_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: Network1_network }
      mac_address: "2c:c2:60:63:25:56"
      
      port_security_enabled: false
      
      
      fixed_ips:
        - {subnet: {get_resource: Network1_subnet}, ip_address: "172.25.250.18"}
      
    
  control0-0_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: Network1_network }
      mac_address: "2c:c2:60:1b:01:f9"
      
      port_security_enabled: false
      
      
      fixed_ips:
        - {subnet: {get_resource: Network1_subnet}, ip_address: "172.25.250.20"}
      
    
  0director-0_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: Network0_network }
      mac_address: "2c:c2:60:24:0e:20"
      
      security_groups:
        - 0director_services_sg
      
      
      fixed_ips:
        - {subnet: {get_resource: Network0_subnet}, ip_address: "10.0.0.1"}
      
    
    depends_on:
      
      
      - 0director_services_sg
      
    
  0director-0_fip:
    type: OS::Neutron::FloatingIP
    depends_on:
      - 0director_server
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: 0director-0_port }
  0director-1_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: Network1_network }
      mac_address: "2c:c2:60:31:b5:87"
      
      security_groups:
        - 0director_services_sg
      
      
      fixed_ips:
        - {subnet: {get_resource: Network1_subnet}, ip_address: "172.25.250.1"}
      
    
    depends_on:
      
      
      - 0director_services_sg
      
    
  0director_server:
    type: OS::Nova::Server
    properties:
      name: "0director"
      
      image: "cee-sk-135-v1.0-0director-vol1"
      
      config_drive: True
      flavor:
         list_join: ['-', [{ get_param: project_name }, "CPU_8_Memory_16384_Disk_60"]]

      
      key_name:  { get_resource: openstack_project_infra_key }
      
      metadata: 
        "guid": { get_param: project_guid }
        "description": "This is an empty image with no operating system installed. To install an OS, please upload a bootable CD-ROM or DVD image.

IMPORTANT NOTE: the hardware settings of this VM are configured to support as wide as possible range of operating systems. As such"
        
          
        "description0": ", it is using emulated network and disk devices. For best performance it is recommended to replace the network and disk devices with paravirtualized devices as supported by the guest OS (for example VirtIO)."
          
        
        "hostname": 
          str_replace:
            template: "director-REPL"
            params:
              REPL: {get_param: project_guid}
        
        
        "AnsibleGroup": bastions
        "public_dns": true
        
        
         
        
      personality: {"/etc/cloud/cloud.cfg.d/99-custom-networking.cfg": "network: {config: disabled}\n"}
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
          
            #cloud-config
            hostname: director-REPL.rhpds.opentlc.com
          
          params:
            REPL: {get_param: project_guid}
            
      networks:
        
        - port: { get_resource: 0director-0_port}
        
        - port: { get_resource: 0director-1_port}
        
      
    

  
  compute0_server:
    type: OS::Nova::Server
    properties:
      name: "compute0"
      
      image: "cee-sk-135-v1.0-compute0-vol"
      
      config_drive: True
      flavor:
         list_join: ['-', [{ get_param: project_name }, "CPU_4_Memory_8192_Disk_50"]]

      
      metadata: 
        "guid": { get_param: project_guid }
        "description": "ipmiaddr:10.0.0.20
ipmipw:redhat"
        
        "hostname": 
          str_replace:
            template: "compute0"
            params:
              REPL: {get_param: project_guid}
        
         
        "cdrom": "cee-sk-135-v1.0-compute0-vol1"
         
        
      personality: {"/etc/cloud/cloud.cfg.d/99-custom-networking.cfg": "network: {config: disabled}\n"}
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
          
            #cloud-config
            hostname: compute0.example.com
          
          params:
            REPL: {get_param: project_guid}
            
      networks:
        
        - port: { get_resource: compute0-0_port}
        
      
    

  
  compute1_server:
    type: OS::Nova::Server
    properties:
      name: "compute1"
      
      image: "cee-sk-135-v1.0-compute1-vol"
      
      config_drive: True
      flavor:
         list_join: ['-', [{ get_param: project_name }, "CPU_4_Memory_8192_Disk_50"]]

      
      metadata: 
        "guid": { get_param: project_guid }
        "description": "ipmiaddr:10.0.0.21
ipmipw:redhat"
        
        "hostname": 
          str_replace:
            template: "compute1"
            params:
              REPL: {get_param: project_guid}
        
         
        "cdrom": "cee-sk-135-v1.0-compute1-vol1"
         
        
      personality: {"/etc/cloud/cloud.cfg.d/99-custom-networking.cfg": "network: {config: disabled}\n"}
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
          
            #cloud-config
            hostname: compute1.example.com
          
          params:
            REPL: {get_param: project_guid}
            
      networks:
        
        - port: { get_resource: compute1-0_port}
        
      
    

  
  control0_server:
    type: OS::Nova::Server
    properties:
      name: "control0"
      
      image: "cee-sk-135-v1.0-control0-vol"
      
      config_drive: True
      flavor:
         list_join: ['-', [{ get_param: project_name }, "CPU_8_Memory_32768_Disk_50"]]

      
      metadata: 
        "guid": { get_param: project_guid }
        "description": "ipmiaddr:10.0.0.10
ipmipw:redhat"
        
        "hostname": 
          str_replace:
            template: "control0"
            params:
              REPL: {get_param: project_guid}
        
         
        "cdrom": "cee-sk-135-v1.0-control0-vol1"
         
        
      personality: {"/etc/cloud/cloud.cfg.d/99-custom-networking.cfg": "network: {config: disabled}\n"}
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
          
            #cloud-config
            hostname: control0.example.com
          
          params:
            REPL: {get_param: project_guid}
            
      networks:
        
        - port: { get_resource: control0-0_port}
        
      
    

  
  ipmi-host_server:
    type: OS::Nova::Server
    properties:
      name: "ipmi-host"
      
      image: "cee-sk-135-v1.0-ipmi-host-boot"
      
      config_drive: True
      flavor:
         list_join: ['-', [{ get_param: project_name }, "CPU_1_Memory_1024_Disk_20"]]

      
      metadata: 
        "guid": { get_param: project_guid }
        "description": ""
        
        "hostname": 
          str_replace:
            template: "ipmi-host"
            params:
              REPL: {get_param: project_guid}
        
         
        
      personality: {"/etc/cloud/cloud.cfg.d/99-custom-networking.cfg": "network: {config: disabled}\n"}
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
          
            #cloud-config
            hostname: ipmi-host
          
          params:
            REPL: {get_param: project_guid}
            
      networks:
        
        - port: { get_resource: ipmi-host-0_port}
        
        - port: { get_resource: ipmi-host-1_port}
        
      
    

  
  dns_servers:
    type: OS::Heat::Value
    properties:
      type: string
      value:
        list_join:
          - "\n"
          - 
            - list_join: [' ', [{get_attr: [0director-0_port, fixed_ips, 0, ip_address]}, "director.example.com" ]]
            
            - list_join: [' ', [{get_attr: [control0-0_port, fixed_ips, 0, ip_address]}, "control0.example.com" ]]
            
            - list_join: [' ', [{get_attr: [compute0-0_port, fixed_ips, 0, ip_address]}, "compute0.example.com" ]]
            
            - list_join: [' ', [{get_attr: [compute1-0_port, fixed_ips, 0, ip_address]}, "compute1.example.com" ]]
            
            - list_join: [' ', [{get_attr: [ipmi-host-0_port, fixed_ips, 0, ip_address]}, "ipmi-host" ]]
            
            - list_join: [' ', [{get_attr: [0director-0_port, fixed_ips, 0, ip_address]}, "director-REPL.rhpds.opentlc.com" ]]
            
            - list_join: [' ', [{get_attr: [0director-0_port, fixed_ips, 0, ip_address]}, "director.example.com" ]]
            
            - list_join: [' ', [{get_attr: [control0-0_port, fixed_ips, 0, ip_address]}, "control0.example.com" ]]
            
            - list_join: [' ', [{get_attr: [compute0-0_port, fixed_ips, 0, ip_address]}, "compute0.example.com" ]]
            
            - list_join: [' ', [{get_attr: [compute1-0_port, fixed_ips, 0, ip_address]}, "compute1.example.com" ]]
            
            - list_join: [' ', [{get_attr: [ipmi-host-0_port, fixed_ips, 0, ip_address]}, "ipmi-host" ]]
            
            - list_join: [' ', [{get_attr: [0director-0_port, fixed_ips, 0, ip_address]}, "director-REPL.rhpds.opentlc.com" ]]
            
  dnsserver_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: dnsserver_sg
      rules:
      - {port_range_max: 53, port_range_min: 53, protocol: udp, remote_ip_prefix: "0.0.0.0/0"}

  dnsserver_server:
    type: OS::Nova::Server
    depends_on:
      - dnsserver_sg
    properties:
      name: "internaldns"
      image: "centos7"
      config_drive: True
      flavor: "m1.small"
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/sh
            echo "Start123" | passwd --stdin root
            echo nameserver 8.8.8.8 > /etc/resolv.conf
            echo "$hosts$" >> /etc/hosts
            sed -i "s/REPL/$GUID$/" /etc/hosts
            yum install -y dnsmasq
            systemctl enable --now dnsmasq
          params:
            "$hosts$": { get_attr: [dns_servers, value] }
            "$GUID$": { get_param: project_guid }
         
      security_groups: [dnsserver_sg]
      networks: 
       - network: { get_resource: Network0_network }
         fixed_ip: 10.0.0.2
outputs:
  openstack_project_infra_key:
    description: The SSH infra key
    value: {get_attr: [openstack_project_infra_key, private_key]}

  0director-0_fip:
    description: FIP for 0director-0
    value: {get_attr: [0director-0_fip, floating_ip_address ]} 


