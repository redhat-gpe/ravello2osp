- hosts: all
  gather_facts: False
  vars:
    project_name: "OPTLC-RHTE2019-OCP4.2_OSP13-bp-red"
    ibm_api_key: "" # Used to upload the disks to IBM Cloud Storage
    ibm_bucket_name: ""
    ibm_endpoint: "https://s3.wdc.us.cloud-object-storage.appdomain.cloud"
    ibm_resource_instance_id: "321e756a-2b5a-4a7b-8acb-bafa42cc1882"
    images:
      
      - ['image', 'vda', '01workstation-vol', '10']  
      
      - ['image', 'vdb', '02undercloud-vol', '50']  
      
      - ['image', 'vdc', '03ctrl01-vol', '50']  
      
      - ['cdrom', 'vdd', '03ctrl01-vol1', '682']  
      
      - ['image', 'vde', '05compute01-vol', '50']  
      
      - ['cdrom', 'vdf', '05compute01-vol1', '682']  
      
      - ['image', 'vdg', '06compute02-vol', '50']  
      
      - ['cdrom', 'vdh', '06compute02-vol1', '682']  
      
      - ['volume', 'vdi', 'ipmi-host-REPOS', '50']  
      
      - ['image', 'vdj', 'ipmi-host-boot', '20']  
      
      - ['volume', 'vdk', 'ipmi-host-registry', '100']  
      

  tasks:
    - name: Remove from the VM the directory /root/images
      file:
        path: /root/images/
        state: absent
    - name: Create in the VM the directory /root/images
      file:
        path: /root/images/
        state: directory
    - name: Install qemu-img
      yum: name=qemu-img state=present

    - name: Convert the disks attached to raw
      command: qemu-img convert -O raw -p /dev/{{ item[1] }} "/root/images/{{ item[2] }}"
      loop:  "{{ images }}"

    - name: Upload the images to OSP
      os_image:
        auth: 
         auth_url: http://169.47.188.15:5000//v3
         project_name: admin
         username: admin
         password: T4g9fYEfwCuDCwgybCmGq6cxg
         user_domain_name: Default
         project_domain_name: Default
        name: "{{ project_name }}-{{ item[2] }}"
        container_format: bare
        disk_format: raw
        is_public: True
        filename: "/root/images/{{ item[2] }}"
      loop:  "{{ images }}"

    - name: Upload images to IBM Cloud Storage
      when: ibm_api_key != "" and ibm_bucket_name != ""
      block:
        - name: Remove from the VM the directory /root/images
          file:
            path: /root/images/
            state: absent
        - name: Create in the VM the directory /root/images
          file:
            path: /root/images/
            state: directory

        - name: Convert the disks attached to qcow2
          command: qemu-img convert -O qcow2 -p /dev/{{ item[1] }} "/root/images/{{ item[2] }}"
          loop:  "{{ images }}"


        - name: Authentication against IAM IBM Cloud
          uri:
           url: "https://iam.cloud.ibm.com/identity/token"
           method: "POST"
           body_format: "form-urlencoded"
           body:
            apikey: "{{ ibm_api_key }}"
            response_type: "cloud_iam"
            grant_type: "urn:ibm:params:oauth:grant-type:apikey"
          register: authtoken

        - set_fact: access_token="{{ authtoken.json.access_token }}"


        - name: Create a bucket
          uri:
            url: "{{ ibm_endpoint }}/{{ ibm_bucket_name }}"
            method: "PUT"
            headers:
              Authorization: "bearer {{ access_token }}"
              ibm-service-instance-id: "{{ ibm_resource_instance_id }}"

        - debug: msg="Bucket created {{ ibm_bucket_name }}"
     
        - name: Upload file to bucket
          uri:
            url: "{{ ibm_endpoint }}/{{ ibm_bucket_name  }}/{{ item[2] }}.qcow2"
            method: "PUT"
            src: "/root/images/{{ item[2] }}"
            remote_src: True
            headers:
              Authorization: "bearer {{ access_token }}"
              ibm-service-instance-id: "{{ ibm_resource_instance_id }}"
              Content-Type: "application/octet-stream"
          loop:  "{{ images }}"
 

    - name: Shutdown the VM
      command: shutdown -h now
      ignore_errors: true
      tags:
      - shutdown


