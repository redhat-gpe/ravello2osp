- hosts: import
  gather_facts: False
  become: true
  vars:
    project_name: "{{ project_name }}"
    ibm_api_key: "{{ ibm_api_key }}"
    ibm_bucket_name: "{{ ibm_bucket_name }}"
    ibm_endpoint: "{{ ibm_endpoint }}"
    ibm_auth_endpoint: "{{ ibm_auth_endpoint }}"
    ibm_resource_id: "{{ ibm_resource_id }}"
    osp_auth_url: "{{ osp_auth_url }}"
    osp_username: "{{ osp_username }}"
    osp_password: "{{ osp_password }}"
    osp_project: "{{ osp_project }}"
    images:
      {% for disk in images %}
      - ['{{ disk.type }}', '{{ disk.device }}', '{{ disk.name }}', '{{ disk.size }}']  
      {% endfor %}
    output_dir: "/images/import/{{ project_name }}"
{% raw %}
  tasks:
#    - name: Remove from the VM the directory /images/import
#      file:
#        path: "/images/import"
#        state: absent

#    - name: Create in the VM the directory {{ output_dir}}
#      file:
#        path: "{{ output_dir }}"
#        state: directory
#        recurse: true

#    - name: Install qemu-img
#      yum:
#        name: qemu-img
#        state: present

#    - name: Install ibm-cos-sdk using pip
#      pip:
#        name: ibm-cos-sdk
#        state: present

#    #  subscription-manager repos --enable rhel-7-server-openstack-14-rpms
#    # yum install python2-openstacksdk.noarch
#    - name: Install openstacksdk using pip
#      pip:
#        name: openstacksdk
#        version: 0.24.0
#        state: present

    - name: Download images from IBM Cloud Storage
      when: ibm_api_key != "" and ibm_bucket_name != ""
      block:
        - name: Download and convert images
          convert_images:
            auth:
              auth_url: "{{ osp_auth_url }}"
              project_name: "{{ osp_project }}"
              username: "{{ osp_username }}"
              password: "{{ osp_password }}"
              user_domain_name: Default
              project_domain_name: Default
            ibm_endpoint: "{{ ibm_endpoint }}"
            ibm_auth_endpoint: "{{ ibm_auth_endpoint }}"
            ibm_api_key: "{{ ibm_api_key }}"
            ibm_resource_id: "{{ ibm_resource_id }}"
            bucket: "{{ ibm_bucket_name }}"
            blueprint: "{{ project_name }}"
            output_dir: "{{ output_dir }}"
            images: "{{ images }}"
            mode: "download"
            overwrite: None
          register: output

        - name: get images to upload to glance
          set_fact:
            images_upload: "{{ output.openstack_image }}"

        - name: Upload image to Glance
          os_image:
            auth:
              auth_url: "{{ osp_auth_url }}"
              project_name: "{{ osp_project }}"
              username: "{{ osp_username }}"
              password: "{{ osp_password }}"
              user_domain_name: Default
              project_domain_name: Default
            name: "{{ item.blueprint }}-{{ item.name }}"
            container_format: bare
            disk_format: raw
            is_public: True
            filename: "{{ item.filename }}"
            properties:
              blueprint: "{{ project_name }}"
          loop:  "{{ images_upload }}"
          loop_control:
            label: "{{ item.name }}"

    - name: Remove from the VM the directory {{ output_dir }}
      file:
        path: "{{ output_dir }}"
        state: absent
{% endraw %}

{% endraw %}
