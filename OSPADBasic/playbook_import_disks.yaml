- hosts: all
  gather_facts: False
  vars:
    images:
      
      - ['vdb', '0Workstation-boot']  
      
      - ['vdc', '3compute02-sda']  
      
      - ['vde', '1undercloud-vda']  
      
      - ['vdf', '2ctrl01-sda']  
      
      - ['vdh', '3compute01-sda']  
      
      - ['vdj', 'ipmi-host-boot']  
      
    volumes:
      
      - ['vdd', '3compute02-CDROM', '1']  
      
      - ['vdg', '2ctrl01-CDROM', '1']  
      
      - ['vdi', '3compute01-CDROM', '1']  
      

  tasks:
    - file:
        path: /root/images/
        state: absent
    - file:
        path: /root/images/
        state: directory
    - yum: name=qemu-img state=present
    - command: qemu-img convert -O qcow2 -p /dev/{{ item[0]}} "/root/images/{{ item[1] }}"
      loop:  "{{ disks }}"

    - file:
        path: /root/images/
        state: absent
      delegate_to: localhost
    - file:
        path: /root/images/
        state: directory
      delegate_to: localhost

    - fetch:
       src: /root/images/{{ item[1] }}
       dest: /root/images/{{ item[1] }}
       flat: yes
      loop:  "{{ disks }}"

    - fetch:
        src: /root/images/{{ item[1] }}
        dest: /root/images/{{ item[1] }}
        flat: yes
      loop:  "{{ disks }}"

    - name: import images 
      delegate_to: localhost
      os_image:
        cloud: openstack-project
        name: "{{ item[1] }}"
        container_format: bare
        disk_format: qcow2
        filename: "/root/images/{{ item[1] }}"
      loop:  "{{ images+volumes }}"


    - name: import volumes 
      delegate_to: localhost
      os_volume:
        cloud: openstack-project
        name: "{{ item[1] }}"
        image: "{{ item[1] }}"
        size: "{{ item[2] }}"
      loop:  "{{ volumes }}"

    - name: import images 
      delegate_to: localhost
      os_image:
        cloud: openstack-project
        name: "{{ item[1] }}"
        state: absent
      loop:  "{{ volumes }}"
      

